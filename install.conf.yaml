- defaults:
    link:
      relink: true
      create: true

- clean: ['~', '~/bin']

- shell:
  - [git submodule update --init --recursive, Installing submodules]
  -
    command: ./macos/setup-homebrew.sh || echo "⚠️  Homebrew setup had issues, continuing with installation..."
    description: Installing Homebrew and Essential Packages
    stdout: true
    stdin: true
  -
    command: |
      if command -v mise >/dev/null 2>&1; then
        eval "$(mise activate bash)"
        echo "✅ Mise initialized for installation session"
      else
        echo "⚠️  Mise not found, will be available after shell restart"
      fi
    description: Initialize mise for current session
    stdout: true

- link:
    ~/.zshrc:
      path: zsh/zshrc.zsh
      force: true
    ~/.oh-my-zsh: zsh/oh-my-zsh
    ~/.zgenom: zsh/zgenom


    ~/bin:
      glob: true
      path: scripts/*
      relink: true

    ~/.config/fastfetch:
      path: fastfetch
      force: true

    ~/.config/direnv:
      path: direnv
      force: true

    # VS Code MacOS
    ~/Library/Application Support/Code/User:
      if: '[ `uname` = Darwin ]'
      glob: true
      path: vscode/macos/*.json
      force: true

    ~/Library/Application Support/Code/User/snippets:
      if: '[ `uname` = Darwin ]'
      path: vscode/snippets
      force: true

- shell:
  -
    command: |
      echo "Installing Operator Mono Nerd Font..."
      if [[ $(uname) = "Darwin" ]]; then
        FONT_DIR="$HOME/Library/Fonts"
        mkdir -p "$FONT_DIR"
        cp -f fonts/operator-mono-nerd/*.otf "$FONT_DIR/"
        echo "✅ Installed $(ls fonts/operator-mono-nerd/*.otf | wc -l | tr -d ' ') Operator Mono Nerd Font variants"
      else
        echo "⚠️  Font installation skipped (not macOS)"
      fi
    description: Installing Operator Mono Nerd Font
    stdout: true

- shell:
  -
    command: |
      if command -v mise >/dev/null 2>&1; then
        echo "Installing Node.js and pnpm with mise..."
        mise use --global node@lts pnpm@latest
        echo "✅ Node.js LTS and pnpm latest installed globally"
        mise install node@latest
        echo "✅ Node.js latest version also installed"
        mise use --global node@lts pnpm@latest
        echo "✅ Global versions set: node@lts, pnpm@latest"
      else
        echo "⚠️  Mise not available, skipping tool installation"
      fi
    description: Installing Node.js and pnpm with mise
    stdout: true


- shell:
  -
    command: ./git/set-gitconfig.sh
    description: Configuring Git
    stdout: true
    quiet: false
  -
    command: |
      echo ""
      echo "🎉 =============================================="
      echo "✅ Dotfiles installation completed successfully!"
      echo "🎉 =============================================="
      echo ""
      echo "📋 Next steps:"
      echo "   • Set git email: git config --global user.email 'your-email@example.com'"
      echo "   • Restart terminal or run: source ~/.zshrc"
      echo "   • Enjoy your optimized development environment!"
      echo ""
    description: Installation Complete
    stdout: true

